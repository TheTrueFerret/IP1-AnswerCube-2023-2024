{"version":3,"file":"singlechoice.entry.js","mappings":";;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;;;;;;;UCJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sEAAyB;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://AnswerCube/./src/ts/urlDecoder.ts","webpack://AnswerCube/webpack/bootstrap","webpack://AnswerCube/webpack/runtime/define property getters","webpack://AnswerCube/webpack/runtime/hasOwnProperty shorthand","webpack://AnswerCube/webpack/runtime/make namespace object","webpack://AnswerCube/./src/ts/flow/slide/SingleChoice.ts"],"sourcesContent":["export function RemoveLastDirectoryPartOf(the_url) {\n    var the_arr = the_url.split('/');\n    the_arr.pop();\n    return (the_arr.join('/'));\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { RemoveLastDirectoryPartOf } from \"../../urlDecoder\";\nvar url = window.location.toString();\nconst slideElement = document.getElementById(\"slide\");\nconst checkboxes = document.querySelectorAll('input[name=\"answer\"]');\nvar currentCheckedIndex = -1;\nconst totalCheckboxes = checkboxes.length;\nfunction postAnswer(cubeId, action) {\n    let answer = getSelectedAnswer();\n    if (action === 'submit' && answer.length === 0) {\n        console.log('No answers selected');\n        // Show error to the user, e.g., alert or some UI indication\n        alert('Please select at least one answer before submitting <3');\n        return;\n    }\n    let requestBody = {\n        Answer: answer,\n        CubeId: cubeId\n    };\n    console.log(requestBody);\n    fetch(RemoveLastDirectoryPartOf(url) + \"/PostAnswer\", {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        },\n        body: JSON.stringify(requestBody)\n    }).then((response) => {\n        if (response.status === 200) {\n            return response.json();\n        }\n        else {\n            if (slideElement) {\n                slideElement.innerHTML = \"<em>problem!!!</em>\";\n            }\n        }\n    }).then((nextSlideData) => {\n        if (nextSlideData.url) {\n            // Redirect to the URL of the next slide\n            window.location.href = nextSlideData.url;\n        }\n    }).catch(err => {\n        console.log(\"Something went wrong: \" + err);\n    });\n    console.log(answer);\n}\nfunction getSelectedAnswer() {\n    const checkboxes = document.querySelectorAll('input[name=\"answer\"]:checked');\n    let selectedAnswers = [];\n    checkboxes.forEach((checkbox) => {\n        const inputElement = checkbox;\n        if (inputElement.value) {\n            selectedAnswers.push(inputElement.value);\n        }\n    });\n    return selectedAnswers;\n}\nfunction moveCheckedRadioButton(direction) {\n    // Check if there's a radio button checked\n    if (currentCheckedIndex === -1) {\n        checkboxes[0].checked = true;\n        currentCheckedIndex = 0;\n        return;\n    }\n    let newIndex;\n    if (direction === 'up') {\n        newIndex = currentCheckedIndex - 1;\n        if (newIndex < 0)\n            newIndex = totalCheckboxes - 1;\n    }\n    else if (direction === 'down') {\n        newIndex = currentCheckedIndex + 1;\n        if (newIndex >= totalCheckboxes)\n            newIndex = 0;\n    }\n    else {\n        return; // Invalid direction\n    }\n    checkboxes[currentCheckedIndex].checked = false;\n    checkboxes[newIndex].checked = true;\n    currentCheckedIndex = newIndex;\n}\nwindow.slideType = \"SingleChoice\";\nwindow.moveCheckedRadioButton = moveCheckedRadioButton;\nwindow.postAnswer = postAnswer;\n"],"names":[],"sourceRoot":""}