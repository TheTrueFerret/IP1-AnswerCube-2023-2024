@{
    ViewBag.Title = "Data Analyse";
    Layout = "_Layout";
}

<h2 id="title">@ViewBag.Title</h2>
<style>
    .card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border-radius: 0.75rem;
        background-color: white;
        width: 300px;
        height: 222px;
        box-shadow: 0 4px 6px -1px rgba(0,0,0,.1),
        0 2px 4px -2px rgba(0,0,0,.1);
        margin: 10px; /* Add margin for spacing between cards */
    }
    
    #answerlist {
        display: flex;
        flex-direction: column;
        background-color: #e6dbb9;
        border: solid black;
        border-radius: 10px;
        height: auto;
    }
    
    
    
    #answerlist:not(:last-child) {
        margin-bottom: 5px;
    }
    
    .info {
        border: none;
        text-align: center;
    }
    
    #DateTime {
        border: solid;
        border-radius: 5px;
        background-color: #888888;
    }
    
    .title {
        color: rgb(38 50 56);
        letter-spacing: 0;
        line-height: 1.375;
        font-weight: 600;
        font-size: 1.25rem;
        margin-bottom: 0.5rem;
    }
    
    .footer {
      padding: 0.75rem;
      border: 1px solid rgb(236 239 241);
      display: flex;
      align-items: center;
      justify-content: space-between;
      background-color: rgba(0, 140, 255, 0.082);
    }
    
    .tag {
      font-weight: 300;
      font-size: .75rem;
      display: block;
    }
    
    .action {
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
      border: none;
      outline: none;
      box-shadow: 0 4px 6px -1px rgba(33,150,243,.4),0 2px 4px -2px rgba(33,150,243,.4);
      color: rgb(255 255 255);
      text-transform: uppercase;
      font-weight: 700;
      font-size: .75rem;
      padding: 0.75rem 1.5rem;
      background-color: rgb(33 150 243);
      border-radius: 0.5rem;
    }
    
    .action1 {
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
      border: none;
      outline: none;
      box-shadow: 0 4px 6px -1px rgba(33,150,243,.4),0 2px 4px -2px rgba(33,150,243,.4);
      color: rgb(255 255 255);
      text-transform: uppercase;
      font-weight: 700;
      font-size: .75rem;
      padding: 0.75rem 1.5rem;
      background-color: rgb(33 150 243);
      border-radius: 0.5rem;
    }
    
    .goBack {
      background: #777777;
      border: none;
      padding: 10px 20px;
      display: inline-block;
      font-size: 15px;
      font-weight: 600;
      width: 120px;
      text-transform: uppercase;
      cursor: pointer;
      transform: skew(200deg);
    }
    
    .backSpan {
      display: inline-block;
    }
    
    .goBack::before {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      right: 100%;
      left: 0;
      background: rgb(20, 20, 20);
      opacity: 0;
      z-index: -1;
      transition: all 0.5s;
    }
    
    .goBack:hover {
      color: #fff;
    }
    
    .goBack:hover::before {
      left: 0;
      right: 0;
      opacity: 1;
    }
    .data-container {
        display: flex;
        flex-direction: row;
    }
    #sessions {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap; /* Add this line to wrap cards to the next line */
    }
    #antwoorden {
        width: 100%;
        height: 80vh;
    }
    #questionButton {
        text-align: left;
    }
    
</style>
<div class="data-container">
    <div id="antwoorden"></div>
    <div id="sessions"></div>
    <div id="chart-container" style="display: flex; flex-wrap: wrap;"></div>
</div>

@section scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
    var sessionAnswers;
    var allAnswers = {};
    var antwoordenContainer = $('#antwoorden');
        $(document).ready(function() {
            fetchAndRenderAnswers();
            function fetchAndRenderAnswers() {
                $.ajax({
                    url: '/api/DataAnalyse/Answers',
                    type: 'GET',
                    success: function(answerData) {
                        var groupedBySession = {}; 
                        var lijst = {}; 
                        answerData.forEach(function(answerWithId) {
                            var sessionId = answerWithId.session.id;
                            if (!groupedBySession[sessionId]) {
                                groupedBySession[sessionId] = [];
                            }
                            groupedBySession[sessionId].push(answerWithId);
                        });
                        renderSessions(groupedBySession);
                    },
                    error: function(xhr, status, error) {
                        console.error("Error fetching answers:", error);
                    }
                });
            }
            
            // function fetchSlides() {
            //     $.ajax({
            //         url: '/api/DataAnalyse/Slides',
            //         type: 'GET',
            //         success: function (slides) {
            //             console.log(JSON.stringify(slides));
            //         }
            //     });
            // }
            
            
            
                        
            function renderSessions(groupedBySession) {
                var sessionsContainer = $('#sessions');
                var antwoordenContainer = $('#antwoorden');
                var PaginaTitel = $('#title');
                PaginaTitel.empty();
                PaginaTitel.append("Data Analyse");
                sessionsContainer.empty();
                antwoordenContainer.empty();
                
                
                
                Object.keys(groupedBySession).forEach(function(sessionId) {
                    sessionAnswers = groupedBySession[sessionId];
                    var cubeId = sessionAnswers[0].session.cubeId;
                    var startTime = new Date(sessionAnswers[0].session.startTime).toLocaleTimeString();
                    var endTime = new Date(sessionAnswers[0].session.endTime).toLocaleTimeString();
                    var startDate = new Date(sessionAnswers[0].session.startTime).toLocaleDateString();
                    var endDate = new Date(sessionAnswers[0].session.endTime).toLocaleDateString();
                    // console.log(sessionAnswers[0]);
                    var answerAmount = sessionAnswers.length;

                    var sessionHtml = '<div class="card">' +
                        '<div class="info">' +
                        '<p class="title">Session: ' + sessionId + '</p>' +
                        '<p id="sessionInfo">' +
                        '<p id="cubeId">Cube ID: ' + cubeId + '</p>' +
                        '<section id="DateTime">' +
                        '<p id="answers">questions answered: ' + answerAmount + '</p>' +
                        '</section>' +
                        '</p>' +
                        '</div>' +
                        '<div class="footer">' +
                        '<p class="tag">' + startDate + ' <br>time: ' + startTime + '</br></p>' +
                        '<button type="button" class="action" data-sessionid="' + sessionId + '">See Answers</button>' +
                        '</div>' +
                        '</div>';
                    sessionsContainer.append(sessionHtml);
                });
                
                fetchAnswers()
                function fetchAnswers() {
                    $.ajax({
                        url: '/api/DataAnalyse/Answers',
                        type: 'GET',
                        success: function (allAnswers) {
                            allAnswers.forEach(function (answers) {
                                console.log(answers.id);
                                antwoordenContainer.append('<li id="items"><button type="button" class="action1" id="' + answers.id + '">Question: '+  answers.id + '</button></li>');
                            });
                        },
                    });
                }
                
                
                // Add event listener to the "Get started" button
                $('.action').click(function() {
                    var sessionId = $(this).data('sessionid');
                    KlikOpSession(sessionId);
                });
                
                $('#antwoorden').on('click', '.action1', function() {
                    var answer = $(this).attr('id'); // Change to use id attribute
                    console.log(answer);
                    KlikOpAnswer(answer);
                });
            }
            
            function KlikOpSession(sessionId) {
                var sessionContainer = $('#sessions');
                var antwoordenContainer = $('#antwoorden');
                var PaginaTitel = $('#title');
                sessionContainer.empty(); 
                PaginaTitel.empty();
                PaginaTitel.append('<button class="goBack"><span class="backSpan">Go Back</span></button>');
                PaginaTitel.append('<h1>Session ID: ' + sessionId + '</h1>');
                antwoordenContainer.empty();
                
                $('.goBack').click(function() {
                    fetchAndRenderAnswers();
                });

                $.ajax({
                    url: '/api/DataAnalyse/AnswersBySessionId/' + sessionId,
                    type: 'GET',
                    success: function(sessionData) {
                        console.log(sessionData);   
                    },
                    error: function(xhr, status, error) {
                        console.error("Error fetching answers:", error);
                    }
                });
            }
            
            function KlikOpAnswer(answerId) {
            }
        });
    </script>
}