@model dynamic

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<h2>@ViewBag.Title</h2>
<div id="pivot-container"></div>
<div id="chart"></div>
<div id="antwoorden">
    
</div>

@section scripts {
    <link href="https://cdn.webdatarocks.com/latest/webdatarocks.min.css" rel="stylesheet"/>
    <script src="https://cdn.webdatarocks.com/latest/webdatarocks.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script> <!-- Include D3.js library -->

    <script>
        // Function to render D3.js bar chart
        function renderBarChart(data) {
            // Your existing code for rendering the bar chart goes here
        }

        // Fetch data using AJAX
        $.ajax({
            url: '/api/DataAnalyse/Answers',
            type: 'GET',
            success: function(answerData) {
                console.log(answerData); 
                renderBarChart(answerData); 
                answerData.forEach(function (antwoord) {
                    console.log(antwoord.answerText);
                    console.log(antwoord.slide.text);
                });
            },
            error: function(xhr, status, error) {
                console.error("Error fetching answers:", error);
            }
        });

        // Function to create a simple circle diagram
        function createCircleDiagram(numQuestionsAnswered) {
            var width = 400;
            var height = 400;
            var radius = Math.min(width, height) / 2;

            var color = d3.scaleOrdinal()
                .range(["#66c2a5", "#fc8d62", "#8da0cb"]);

            var svg = d3.select("#chart")
                .append("svg")
                .attr("width", width)
                .attr("height", height)
                .append("g")
                .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

            var pie = d3.pie()
                .value(function(d) { return d.value; })
                .sort(null);

            var data = [{label: "Answered: " + numQuestionsAnswered.toString(), value: numQuestionsAnswered}, 
                        {label: "Unanswered: " + (10 - numQuestionsAnswered).toString(), value: (10 - numQuestionsAnswered)}];

            var arc = d3.arc()
                .outerRadius(radius - 10)
                .innerRadius(0);

            var labelArc = d3.arc()
                .outerRadius(radius - 40)
                .innerRadius(radius - 40);

            var g = svg.selectAll(".arc")
                .data(pie(data))
                .enter().append("g")
                .attr("class", "arc");

            g.append("path")
                .attr("d", arc)
                .style("fill", function(d) { return color(d.data.label); });

            g.append("text")
                .attr("transform", function(d) { return "translate(" + labelArc.centroid(d) + ")"; })
                .attr("dy", ".35em")
                .text(function(d) { return d.data.label; });
        }
        function toonAntwoorden(numQuestionsAnswered) {
            
        }
    </script>
}
